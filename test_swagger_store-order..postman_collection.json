{
	"info": {
		"_postman_id": "e6a217e0-8d6f-432f-b35b-dda0e826f125",
		"name": "test swagger store/order.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "positiv test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"pm.test(\"Test for data Model\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.id).to.eql(1);",
							"  pm.expect(responseJson.petId).to.eql(1);",
							"    pm.expect(responseJson.status).to.eql('ok');",
							"  pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 1,\n  \"petId\": 1,\n  \"quantity\": 1,\n  \"shipDate\": \"2022-02-12T19:44:21.385+0000\",\n  \"status\": \"ok\",\n  \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "negative test (-1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"pm.test(\"Test for data Model\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.id).to.eql(-1);",
							"  pm.expect(responseJson.petId).to.eql(-1);",
							"    pm.expect(responseJson.status).to.eql('ok');",
							"  pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": -1,\n  \"petId\": -1,\n  \"quantity\": -1,\n  \"shipDate\": \"2022-02-12T19:44:21.385+0000\",\n  \"status\": \"ok\",\n  \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "negative test (null)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"pm.test(\"Test for data Model\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.id).to.eql(null);",
							"  pm.expect(responseJson.petId).to.eql(null);",
							"    pm.expect(responseJson.status).to.eql(null);",
							"  pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 1,\n  \"petId\": 1,\n  \"quantity\": 1,\n  \"shipDate\": \"2022-02-12T19:44:21.385+0000\",\n  \"status\": \"ok\",\n  \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "negative test float",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"pm.test(\"Test for data Model\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.id).to.eql(1.01);",
							"  pm.expect(responseJson.petId).to.eql(1.01);",
							"    pm.expect(responseJson.status).to.eql('ok');",
							"  pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 1,\n  \"petId\": 1,\n  \"quantity\": 1,\n  \"shipDate\": \"2022-02-12T19:44:21.385+0000\",\n  \"status\": \"ok\",\n  \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "negative test string",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"pm.test(\"Test for data Model\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.id).to.eql(ghhj);",
							"  pm.expect(responseJson.petId).to.eql(hkhj);",
							"    pm.expect(responseJson.status).to.eql('ok');",
							"  pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 1,\n  \"petId\": 1,\n  \"quantity\": 1,\n  \"shipDate\": \"2022-02-12T19:44:21.385+0000\",\n  \"status\": \"ok\",\n  \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "negative test string status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"pm.test(\"Test for data Model\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.id).to.eql(1);",
							"  pm.expect(responseJson.petId).to.eql(1);",
							"    pm.expect(responseJson.status).to.eql(123);",
							"",
							"  ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 1,\n  \"petId\": 1,\n  \"quantity\": 1,\n  \"shipDate\": \"2022-02-12T19:44:21.385+0000\",\n  \"status\": \"ok\",\n  \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "negative test status code 500",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([500, 501]);",
							"});",
							"",
							"pm.test(\"Test for data Model\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.id).to.eql(1);",
							"  pm.expect(responseJson.petId).to.eql(1);",
							"    pm.expect(responseJson.status).to.eql('ok');",
							"  pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 1,\n  \"petId\": 1,\n  \"quantity\": 1,\n  \"shipDate\": \"2022-02-12T19:44:21.385+0000\",\n  \"status\": \"ok\",\n  \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				}
			},
			"response": []
		}
	]
}